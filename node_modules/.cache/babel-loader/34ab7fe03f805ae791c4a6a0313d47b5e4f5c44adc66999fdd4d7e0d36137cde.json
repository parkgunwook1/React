{"ast":null,"code":"var _jsxFileName = \"C:\\\\ReactWorspace\\\\myapp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n/* eslint-disable */\n//콘솔창에 불필요한 에러를 지우는 코드\n\nimport './App.css';\nimport { useState } from 'react';\n\n//import data from './data'; \nimport 초기게시글 from './data'; //default옵션으로 export한 경우 변수명을 다르게 가져올 수 있음\nimport { a, b, c } from './data'; //a,b,c의 값을 가지고 옴\nimport BoardInsert from './components/BoardInsert';\nimport BoardList from './components/BoardList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let 제목 = \"KH C CLASS\";\n\n  // state 문법\n  let [제목2, 제목변경함수] = useState('KH E CLASS');\n  // let [title, setTitle]  관례\n  //usestate는 길이 2짜리 배열 [ 'KH E CLASS', function ]\n\n  /*\n    비구조화할당문법 : 배열이나 객체에 들어가 있는 값을 \"쉽게\" 변수로 할당하는 문법\n  \n     let arr=[1,2];\n     let a = arr[0];\n     let b = arr[1];\n    >>  let [a,b] = arr;\n      useState()함수의 반환값은 길이 2짜리 배열[]이며,\n     배열 비구조화할당문법을 통해 쉽게 배열에 있는 값을 변수로 할당한 것\n     \n     반환된 배열의 0번 인덱스에 있는 값을 제목2 변수에, \n     1번 인덱스에 있는 값을 제목변경함수에 각각 할당한 것\n  */\n\n  let [게시글배열, 게시글배열변경함수] = useState(초기게시글);\n  function 제목2변경() {\n    // 제목2 = \"KH C CLASS\"; // 단순 대입연산자를 활용하는 경우 state값의 변경점을 reactDom이 알지못함\n    // console.log(제목2);\n\n    제목변경함수(\"KH C CLASS\"); //useState의 두번째 매개변수로 전달받은 함수를 통해 변경 시 화면이 재랜더링됨\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          fontWeight: \"bolder\"\n        },\n        children: [\"  \", 제목2, \"  \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nav\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: 제목2변경,\n        children: \"\\uC81C\\uBAA9\\uBCC0\\uACBD\\uD14C\\uC2A4\\uD2B8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"\\uAC8C\\uC2DC\\uD310\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"\\uB4F1\\uB85D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BoardList, {\n      게시글배열: 게시글배열,\n      게시글배열변경함수: 게시글배열변경함수\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(BoardInsert, {\n      게시글배열: 게시글배열,\n      게시글배열변경함수: 게시글배열변경함수\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"LyZKs1DYlrwT00pJ+ia+kR8NjI4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","초기게시글","a","b","c","BoardInsert","BoardList","jsxDEV","_jsxDEV","App","_s","제목","제목2","제목변경함수","게시글배열","게시글배열변경함수","제목2변경","className","children","style","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/ReactWorspace/myapp/src/App.js"],"sourcesContent":["/* eslint-disable */ \n//콘솔창에 불필요한 에러를 지우는 코드\n\nimport './App.css';\nimport {useState} from 'react';\n\n//import data from './data'; \nimport 초기게시글 from './data';  //default옵션으로 export한 경우 변수명을 다르게 가져올 수 있음\nimport {a,b,c} from './data'; //a,b,c의 값을 가지고 옴\nimport BoardInsert from './components/BoardInsert';\nimport BoardList from './components/BoardList';\n\n\nfunction App() {\n\n  let 제목 = \"KH C CLASS\";\n\n  // state 문법\n  let [제목2, 제목변경함수]  = useState('KH E CLASS'); \n  // let [title, setTitle]  관례\n  //usestate는 길이 2짜리 배열 [ 'KH E CLASS', function ]\n\n  /*\n    비구조화할당문법 : 배열이나 객체에 들어가 있는 값을 \"쉽게\" 변수로 할당하는 문법\n  \n     let arr=[1,2];\n     let a = arr[0];\n     let b = arr[1];\n    >>  let [a,b] = arr;\n\n     useState()함수의 반환값은 길이 2짜리 배열[]이며,\n     배열 비구조화할당문법을 통해 쉽게 배열에 있는 값을 변수로 할당한 것\n     \n     반환된 배열의 0번 인덱스에 있는 값을 제목2 변수에, \n     1번 인덱스에 있는 값을 제목변경함수에 각각 할당한 것\n  */\n\n  let [게시글배열, 게시글배열변경함수] = useState(초기게시글);\n     \n\n  function 제목2변경 (){\n\n    // 제목2 = \"KH C CLASS\"; // 단순 대입연산자를 활용하는 경우 state값의 변경점을 reactDom이 알지못함\n    // console.log(제목2);\n\n    제목변경함수(\"KH C CLASS\"); //useState의 두번째 매개변수로 전달받은 함수를 통해 변경 시 화면이 재랜더링됨\n  }\n\n\n  return (\n    <div className=\"App\">\n      { /* jsx문법 내부에서의 주석\n\n          JSX문법)\n          js문법 내부에 html코드를 작성할 수 있는 문법을 jsx문법이라고 함\n          리액트에서 ui를 구성할 때 보편적으로 사용되는 방법으로 복잡한 코드를 짤 필요 없이,\n          동적으로 추가되는 dom요소를 단순 코드선언으로 생성할 수 있게 도와줌\n      */ }\n\n      <div className=\"header\">\n        <h3 style={ {fontWeight : \"bolder\"} }>  {제목2}  </h3>\n      </div>\n\n      <div className='nav'>\n        {/* \n          react방식 event부여\n          onClick={함수}\n          * 주의점 : 무조건 함수 자료형 값만 넣어줘야함. 함수 호출한 결과값 넣으면 의미 없음\n        */}\n\n        {/* <button onClick={ () => console.log(1) }>제목변경테스트</button> */}\n        <button onClick={ 제목2변경 }>제목변경테스트</button>\n        <button>게시판</button>\n        <button>등록</button>\n      </div>\n\n     <BoardList  게시글배열={게시글배열} 게시글배열변경함수={게시글배열변경함수}/> \n\n    <BoardInsert 게시글배열={게시글배열} 게시글배열변경함수={게시글배열변경함수}/>\n      \n\n\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA;AACA;;AAEA,OAAO,WAAW;AAClB,SAAQA,QAAQ,QAAO,OAAO;;AAE9B;AACA,OAAOC,KAAK,MAAM,QAAQ,CAAC,CAAE;AAC7B,SAAQC,CAAC,EAACC,CAAC,EAACC,CAAC,QAAO,QAAQ,CAAC,CAAC;AAC9B,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,SAAS,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG/C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,IAAIC,EAAE,GAAG,YAAY;;EAErB;EACA,IAAI,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAIb,QAAQ,CAAC,YAAY,CAAC;EAC3C;EACA;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAGE,IAAI,CAACc,KAAK,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAACC,KAAK,CAAC;EAGxC,SAASe,KAAKA,CAAA,EAAG;IAEf;IACA;;IAEAH,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;EACxB;EAGA,oBACEL,OAAA;IAAKS,SAAS,EAAC,KAAK;IAAAC,QAAA,gBASlBV,OAAA;MAAKS,SAAS,EAAC,QAAQ;MAAAC,QAAA,eACrBV,OAAA;QAAIW,KAAK,EAAG;UAACC,UAAU,EAAG;QAAQ,CAAG;QAAAF,QAAA,GAAC,IAAE,EAACN,GAAG,EAAC,IAAE;MAAA;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC,eAENhB,OAAA;MAAKS,SAAS,EAAC,KAAK;MAAAC,QAAA,gBAQlBV,OAAA;QAAQiB,OAAO,EAAGT,KAAO;QAAAE,QAAA,EAAC;MAAO;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC1ChB,OAAA;QAAAU,QAAA,EAAQ;MAAG;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACpBhB,OAAA;QAAAU,QAAA,EAAQ;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC,eAEPhB,OAAA,CAACF,SAAS;MAAEQ,KAAK,EAAEA,KAAM;MAACC,SAAS,EAAEA;IAAU;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAElDhB,OAAA,CAACH,WAAW;MAACS,KAAK,EAAEA,KAAM;MAACC,SAAS,EAAEA;IAAU;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAI7C,CAAC;AAEV;AAACd,EAAA,CAvEQD,GAAG;AAAAiB,EAAA,GAAHjB,GAAG;AAyEZ,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}