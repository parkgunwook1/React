{"ast":null,"code":"var _jsxFileName = \"C:\\\\ReactWorspace\\\\myapp\\\\src\\\\components\\\\BoardInsert.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BoardInsert({\n  게시글배열,\n  게시글배열변경함수\n}) {\n  _s();\n  //console.log(props);\n  //let 게시글배열 = props.게시글배열;\n  //let 게시글배열변경함수 = props.게시글배열변경함수;\n  //let {게시글배열, 게시글배열변경함수} = props;\n  /*\r\n      컴포넌트 작성규칙\r\n      1) 작명시 첫글자는 대문자로.\r\n      2) 다른 컴포넌트의 외부에 작성해야한다.\r\n      컴포넌트로 만들면 좋은 요소\r\n      1) 반복적으로 출현하는 html요소\r\n      2) 애플리케이션의 각 페이지들\r\n      3) 자주 변경되는 html요소\r\n  */\n  let [입력값, 입력값변경] = useState({\n    글제목: \"\",\n    글내용: \"\",\n    작성자: \"\"\n  });\n  // 입력값.글제목\n  function 게시글등록() {\n    /*\r\n      게시글 등록 작업순서\r\n      1) 내가 입력한 값 가져오기\r\n      2) 가져온 데이터를 바탕으로 게시글 객체 생성하기\r\n      3) 생성한 게시글객체를 게시글배열에 추가한 후 , 게시글배열변경함수 호출하기(랜더링)\r\n      1) 내가 입력한 값 가져오기\r\n      js방식 : document.querySelector(선택자).value\r\n      react방식 : state(글제목, 글내용, 작성자)\r\n    */\n    // \"\" => false , \"dasdsa\" => true\n    let {\n      글내용,\n      글제목,\n      작성자\n    } = 입력값;\n    if (!글내용 || !글제목 || !작성자) {\n      alert(\"뭐든 입력하십쇼\");\n      return;\n    }\n    //2) 가져온 데이터를 바탕으로 게시글 객체 생성하기\n    let 게시글 = {\n      //글번호는 게시글배열에서 고유해야함. 게시글배열에서 가장큰 글번호값을 찾은후 +1해서 반환해줄 예정.\n      글번호: Math.max(...게시글배열.map(function (게시글, 인덱스) {\n        return 게시글.글번호;\n      })) + 1,\n      ...입력값,\n      작성일: new Date().toLocaleDateString() // 2024. 01. 15\n    };\n    // //3) 생성한 게시글객체를 게시글배열에 추가한 후 , 게시글배열변경함수 호출하기(랜더링)\n    게시글배열변경함수([...게시글배열, 게시글]);\n    //입력값 초기화(state초기화)\n    입력값변경({\n      글제목: \"\",\n      글내용: \"\",\n      작성자: \"\"\n    });\n  }\n  function onInputHandler(e) {\n    let {\n      name,\n      value\n    } = e.target;\n    입력값변경({\n      ...입력값,\n      [name]: value\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outer\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uB4F1\\uB85D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"enroll-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"\\uC81C\\uBAA9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          colSpan: 3,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"\\uAE00\\uC81C\\uBAA9\",\n            onChange: function (e) {\n              입력값변경({\n                ...입력값,\n                글제목: e.target.value\n              });\n            },\n            value: 입력값.글제목\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"\\uC791\\uC131\\uC790\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          colSpan: 3,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"\\uC791\\uC131\\uC790\",\n            onChange: function (e) {\n              console.dir(e.target);\n              입력값변경({\n                ...입력값,\n                [e.target.name]: e.target.value\n              });\n              // 대괄호 사용이유\n              // let name = \"글제목\";\n              //{name : e.target.value} => {name: 'zzz'}\n              // { [name] : e,target.value} => {글제목 : 'ㅋㅋㅋ'}\n            },\n            value: 입력값.작성자\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"\\uAE00\\uB0B4\\uC6A9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          colSpan: 3,\n          style: {\n            height: \"200px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"\\uAE00\\uB0B4\\uC6A9\",\n            onChange: onInputHandler,\n            value: 입력값.글내용\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(\"th\", {\n          colSpan: 4,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: 게시글등록,\n            children: \"\\uB4F1\\uB85D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n//export default BoardInsert;\n_s(BoardInsert, \"NDK5qdLgQZ0AASGhll19gnRx598=\");\n_c = BoardInsert;\nvar _c;\n$RefreshReg$(_c, \"BoardInsert\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","BoardInsert","게시글배열","게시글배열변경함수","_s","입력값","입력값변경","글제목","글내용","작성자","게시글등록","alert","게시글","글번호","Math","max","map","인덱스","작성일","Date","toLocaleDateString","onInputHandler","e","name","value","target","className","children","fileName","_jsxFileName","lineNumber","columnNumber","colSpan","type","onChange","console","dir","style","height","onClick","_c","$RefreshReg$"],"sources":["C:/ReactWorspace/myapp/src/components/BoardInsert.js"],"sourcesContent":["import { useState } from \"react\";\r\nexport default function BoardInsert({게시글배열 , 게시글배열변경함수}){\r\n    //console.log(props);\r\n    //let 게시글배열 = props.게시글배열;\r\n    //let 게시글배열변경함수 = props.게시글배열변경함수;\r\n    //let {게시글배열, 게시글배열변경함수} = props;\r\n    /*\r\n        컴포넌트 작성규칙\r\n        1) 작명시 첫글자는 대문자로.\r\n        2) 다른 컴포넌트의 외부에 작성해야한다.\r\n        컴포넌트로 만들면 좋은 요소\r\n        1) 반복적으로 출현하는 html요소\r\n        2) 애플리케이션의 각 페이지들\r\n        3) 자주 변경되는 html요소\r\n    */\r\n  let [입력값, 입력값변경] =useState({글제목 : \"\",\r\n                                    글내용 : \"\",\r\n                                    작성자 : \"\"});\r\n  // 입력값.글제목\r\n  function 게시글등록 () {\r\n    /*\r\n      게시글 등록 작업순서\r\n      1) 내가 입력한 값 가져오기\r\n      2) 가져온 데이터를 바탕으로 게시글 객체 생성하기\r\n      3) 생성한 게시글객체를 게시글배열에 추가한 후 , 게시글배열변경함수 호출하기(랜더링)\r\n      1) 내가 입력한 값 가져오기\r\n      js방식 : document.querySelector(선택자).value\r\n      react방식 : state(글제목, 글내용, 작성자)\r\n    */\r\n    // \"\" => false , \"dasdsa\" => true\r\n    let {글내용 , 글제목, 작성자} = 입력값;\r\n    if( !글내용 || !글제목  || !작성자 ){\r\n      alert(\"뭐든 입력하십쇼\");\r\n      return;\r\n    }\r\n    //2) 가져온 데이터를 바탕으로 게시글 객체 생성하기\r\n    let 게시글 = {\r\n        //글번호는 게시글배열에서 고유해야함. 게시글배열에서 가장큰 글번호값을 찾은후 +1해서 반환해줄 예정.\r\n        글번호 : Math.max( ...게시글배열.map( function(게시글, 인덱스) {return 게시글.글번호})) +1,\r\n        ...입력값,\r\n        작성일 : new Date().toLocaleDateString() // 2024. 01. 15\r\n    }\r\n    // //3) 생성한 게시글객체를 게시글배열에 추가한 후 , 게시글배열변경함수 호출하기(랜더링)\r\n    게시글배열변경함수([...게시글배열 , 게시글]);\r\n    //입력값 초기화(state초기화)\r\n    입력값변경({\r\n      글제목 : \"\",\r\n      글내용 : \"\",\r\n      작성자 : \"\"\r\n    })\r\n  }\r\n  function onInputHandler(e){\r\n    let {name , value} = e.target\r\n    입력값변경({...입력값, [name] : value});\r\n  }\r\n    return (\r\n        <div className='outer'>\r\n          <br />\r\n          <h2>등록</h2>\r\n          <table className='enroll-table'>\r\n            <tr>\r\n              <th>제목</th>\r\n              <td colSpan={3}>\r\n                <input type='text' name='글제목'\r\n                onChange={function(e){\r\n                  입력값변경({...입력값, 글제목 : e.target.value});\r\n                }}\r\n                value={입력값.글제목}\r\n                />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th>작성자</th>\r\n              <td colSpan={3}>\r\n                <input type='text' name='작성자'\r\n                onChange={function(e){\r\n                  console.dir(e.target)\r\n                  입력값변경({\r\n                    ...입력값 ,\r\n                    [e.target.name] : e.target.value\r\n                  })\r\n                  // 대괄호 사용이유\r\n                  // let name = \"글제목\";\r\n                  //{name : e.target.value} => {name: 'zzz'}\r\n                  // { [name] : e,target.value} => {글제목 : 'ㅋㅋㅋ'}\r\n                }}\r\n                value={입력값.작성자}\r\n                />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th>글내용</th>\r\n              <td colSpan={3} style={ { height: \"200px\" }  }>\r\n                <textarea name='글내용'\r\n                onChange={onInputHandler}\r\n                value={입력값.글내용}\r\n                ></textarea>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan={4}><button onClick={게시글등록}>등록</button></th>\r\n            </tr>\r\n          </table>\r\n      </div>\r\n    )\r\n}\r\n//export default BoardInsert;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}