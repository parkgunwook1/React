{"ast":null,"code":"var _jsxFileName = \"C:\\\\ReactWorspace\\\\myapp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n/* eslint-disable */\n//콘솔창에 불필요한 에러를 지우는 코드\n\nimport './App.css';\nimport { useState } from 'react';\n\n//import data from './data'; \nimport 초기게시글 from './data'; //default옵션으로 export한 경우 변수명을 다르게 가져올 수 있음\nimport { a, b, c } from './data'; //a,b,c의 값을 가지고 옴\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let 제목 = \"KH C CLASS\";\n\n  // state 문법\n  let [제목2, 제목변경함수] = useState('KH E CLASS');\n  // let [title, setTitle]  관례\n  //usestate는 길이 2짜리 배열 [ 'KH E CLASS', function ]\n\n  /*\n    비구조화할당문법 : 배열이나 객체에 들어가 있는 값을 \"쉽게\" 변수로 할당하는 문법\n  \n     let arr=[1,2];\n     let a = arr[0];\n     let b = arr[1];\n    >>  let [a,b] = arr;\n      useState()함수의 반환값은 길이 2짜리 배열[]이며,\n     배열 비구조화할당문법을 통해 쉽게 배열에 있는 값을 변수로 할당한 것\n     \n     반환된 배열의 0번 인덱스에 있는 값을 제목2 변수에, \n     1번 인덱스에 있는 값을 제목변경함수에 각각 할당한 것\n  */\n\n  let [게시글배열, 게시글배열변경함수] = useState(초기게시글);\n  function 제목2변경() {\n    // 제목2 = \"KH C CLASS\"; // 단순 대입연산자를 활용하는 경우 state값의 변경점을 reactDom이 알지못함\n    // console.log(제목2);\n\n    제목변경함수(\"KH C CLASS\"); //useState의 두번째 매개변수로 전달받은 함수를 통해 변경 시 화면이 재랜더링됨\n  }\n\n  // function 게시글삭제(삭제할글번호){ } 랑 똑같음\n  const 게시글삭제 = 삭제할글번호 => {\n    // 1) 배열에서 삭제를 담당하는 메서드 Array.splice(인덱스위치, 삭제할개수)\n    // for(let i = 0; i<게시글배열.length; i++){\n    //   if(게시글배열[i].글번호 == 삭제할글번호){\n    //     게시글배열.splice(i, 1);\n    //     break;\n    //   }\n    // }\n\n    // ...전개연산자 (값들을 쭉 펼친다)  - 깊은복사를 할 때 사용함\n    // ...[a,b,c] -> a,b,c // ...{key : value, key : value} -> key : value, key : value  \n    // Array.from(게시글배열), 게시글배열.slice(), concat함수 등...\n\n    게시글배열변경함수([...게시글배열]); // 값이 제거된 배열을 넣어줬음에도 랜더링이 이루어지지 않음\n    // 주솟값 자체는 변하지 않아서 랜더링이 이루어지지 않음\n\n    // 2) 게시글 배열에서 글번호와 일치하지 않는 게시글만 필터링하기 (filter함수 이용)\n    let 필터링배열 = 게시글배열.filter(게시글 => 게시글.글번호 !== 삭제할글번호); // 지금 게시글번호와, 삭제할글번호가 일치하지 않을 때만 반환\n    게시글배열변경함수(필터링배열); //필터함수가 깊은복사함수임, 그래서 이렇게만 써도 됨\n  };\n\n  // let 글제목; \n  let [글제목, 글제목변경함수] = useState(''); //초기값으로 빈 문자열 선언해둠\n  let [글내용, 글내용변경함수] = useState('');\n  let [작성자, 작성자변경함수] = useState('');\n\n  // function 게시글등록(){ }\n  const 게시글등록 = () => {\n    /*\n      게시글 등록 작업순서\n      1) 내가 입력한 값 가져오기\n      2) 가져온 데이터를 바탕으로 게시글 객체 생성하기\n      3) 생성한 게시글 객체를 게시글 배열에 추가한 후, 게시글 배열 변경함수 호출하기 (랜더링)\n    */\n\n    // 1) 내가 입력한 값 가져오기\n    // js방식 : document.querySelector(선택자).value\n    // react 방식 : state(글제목,글내용,작성자)\n    console.log(글내용, 글제목, 작성자);\n    // ** => false, \"dasdsa\" => true\n    if (!글내용 || !글제목 || !작성자) {\n      alert(\"뭐든 하십쇼\");\n      return;\n    }\n\n    //2) 가져온 데이터를 바탕으로 게시글 객체 생성하기\n    let 게시글 = {\n      //글번호는 게시글 배열에서 고유해야 함 , 게시글 배열에서 가장 큰 글번호값을 찾은 후 +1해서 반환해줄 예정\n      글번호: Math.max(...게시글배열.map(function (게시글, 인덱스) {\n        return 게시글.글번호;\n      })) + 1,\n      //map함수를 이용해서 반복문을 돌리며 게시글의 글번호를 배열 형태로 반환 [1,2,3,4,5,6,7,8,9,10]\n      글제목,\n      // key,value값에 들어가는 변수명이 동일한 경우 속성명 단축구문을 제공\n      글내용,\n      작성자,\n      작성일: new Date().toLocaleDateString() // 2024. 01. 15 \n    };\n\n    // 3) 생성한 게시글 객체를 게시글 배열에 추가한 후, 게시글 배열 변경함수 호출하기 (랜더링)\n    게시글배열.push(게시글);\n    // 게시글배열변경함수(게시글배열); // 이렇게하면 주소값을 넣는것이어서 안됨\n    게시글배열변경함수([...게시글배열]); // 전개되면 배열이 아니기 때문에 [] 를 넣어주는 것\n\n    // 입력값 초기화(state)초기화\n    글제목변경함수('');\n    글내용변경함수('');\n    작성자변경함수('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          fontWeight: \"bolder\"\n        },\n        children: [\"  \", 제목2, \"  \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nav\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: 제목2변경,\n        children: \"\\uC81C\\uBAA9\\uBCC0\\uACBD\\uD14C\\uC2A4\\uD2B8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"\\uAC8C\\uC2DC\\uD310\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"\\uB4F1\\uB85D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"outer\",\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uC77C\\uBC18\\uAC8C\\uC2DC\\uD310\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"list-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                width: \"10%\"\n              },\n              children: \"\\uBC88\\uD638\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                width: \"40%\"\n              },\n              children: \"\\uC81C\\uBAA9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                width: \"20%\"\n              },\n              children: \"\\uC791\\uC131\\uC790\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                width: \"20%\"\n              },\n              children: \"\\uC791\\uC131\\uC77C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                width: 7\n              },\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children:\n          /*\n            Array내부의 map함수 사용 예정 \n            [1,2,3].forEach(함수) - forEach :  배열의 길이만큼 반복해줌 \n            [1,2,3].map(function() {return 1} )  => [1,1,1] - map : 배열의 길이만큼 반복하면서 return 되는 값을 배열에 담아서 반환해줌\n          */\n\n          게시글배열.map(function (게시글, 인덱스) {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: 게시글.글번호\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: 게시글.글제목\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: 게시글.작성자\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: 게시글.작성일\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => {\n                    게시글삭제(게시글.글번호);\n                  },\n                  children: \"\\uC0AD\\uC81C\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 28\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 23\n              }, this)]\n            }, 인덱스, true, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"SSPyVCWbQl5Hemoc9fWx9ItB10o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","초기게시글","a","b","c","jsxDEV","_jsxDEV","App","_s","제목","제목2","제목변경함수","게시글배열","게시글배열변경함수","제목2변경","게시글삭제","삭제할글번호","필터링배열","filter","게시글","글번호","글제목","글제목변경함수","글내용","글내용변경함수","작성자","작성자변경함수","게시글등록","console","log","alert","Math","max","map","인덱스","작성일","Date","toLocaleDateString","push","className","children","style","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","onClick","width","_c","$RefreshReg$"],"sources":["C:/ReactWorspace/myapp/src/App.js"],"sourcesContent":["/* eslint-disable */ \n//콘솔창에 불필요한 에러를 지우는 코드\n\nimport './App.css';\nimport {useState} from 'react';\n\n//import data from './data'; \nimport 초기게시글 from './data';  //default옵션으로 export한 경우 변수명을 다르게 가져올 수 있음\nimport {a,b,c} from './data'; //a,b,c의 값을 가지고 옴\n\n\nfunction App() {\n\n  let 제목 = \"KH C CLASS\";\n\n  // state 문법\n  let [제목2, 제목변경함수]  = useState('KH E CLASS'); \n  // let [title, setTitle]  관례\n  //usestate는 길이 2짜리 배열 [ 'KH E CLASS', function ]\n\n  /*\n    비구조화할당문법 : 배열이나 객체에 들어가 있는 값을 \"쉽게\" 변수로 할당하는 문법\n  \n     let arr=[1,2];\n     let a = arr[0];\n     let b = arr[1];\n    >>  let [a,b] = arr;\n\n     useState()함수의 반환값은 길이 2짜리 배열[]이며,\n     배열 비구조화할당문법을 통해 쉽게 배열에 있는 값을 변수로 할당한 것\n     \n     반환된 배열의 0번 인덱스에 있는 값을 제목2 변수에, \n     1번 인덱스에 있는 값을 제목변경함수에 각각 할당한 것\n  */\n\n    let [게시글배열, 게시글배열변경함수] = useState(초기게시글);\n     \n\n    function 제목2변경 (){\n\n      // 제목2 = \"KH C CLASS\"; // 단순 대입연산자를 활용하는 경우 state값의 변경점을 reactDom이 알지못함\n      // console.log(제목2);\n\n      제목변경함수(\"KH C CLASS\"); //useState의 두번째 매개변수로 전달받은 함수를 통해 변경 시 화면이 재랜더링됨\n    }\n\n    // function 게시글삭제(삭제할글번호){ } 랑 똑같음\n    const 게시글삭제 = (삭제할글번호) => {\n\n      // 1) 배열에서 삭제를 담당하는 메서드 Array.splice(인덱스위치, 삭제할개수)\n      // for(let i = 0; i<게시글배열.length; i++){\n      //   if(게시글배열[i].글번호 == 삭제할글번호){\n      //     게시글배열.splice(i, 1);\n      //     break;\n      //   }\n      // }\n\n      // ...전개연산자 (값들을 쭉 펼친다)  - 깊은복사를 할 때 사용함\n      // ...[a,b,c] -> a,b,c // ...{key : value, key : value} -> key : value, key : value  \n      // Array.from(게시글배열), 게시글배열.slice(), concat함수 등...\n\n      게시글배열변경함수([...게시글배열]); // 값이 제거된 배열을 넣어줬음에도 랜더링이 이루어지지 않음\n      // 주솟값 자체는 변하지 않아서 랜더링이 이루어지지 않음\n\n      // 2) 게시글 배열에서 글번호와 일치하지 않는 게시글만 필터링하기 (filter함수 이용)\n      let 필터링배열 = 게시글배열.filter( (게시글) => 게시글.글번호 !== 삭제할글번호  ) // 지금 게시글번호와, 삭제할글번호가 일치하지 않을 때만 반환\n      게시글배열변경함수(필터링배열);  //필터함수가 깊은복사함수임, 그래서 이렇게만 써도 됨\n\n     }\n\n\n     // let 글제목; \n     let [글제목, 글제목변경함수] = useState(''); //초기값으로 빈 문자열 선언해둠\n     let [글내용, 글내용변경함수] = useState('');\n     let [작성자, 작성자변경함수] = useState('');\n     \n     // function 게시글등록(){ }\n     const 게시글등록 = () => {\n     \n      /*\n        게시글 등록 작업순서\n        1) 내가 입력한 값 가져오기\n        2) 가져온 데이터를 바탕으로 게시글 객체 생성하기\n        3) 생성한 게시글 객체를 게시글 배열에 추가한 후, 게시글 배열 변경함수 호출하기 (랜더링)\n      */\n\n        // 1) 내가 입력한 값 가져오기\n        // js방식 : document.querySelector(선택자).value\n        // react 방식 : state(글제목,글내용,작성자)\n        console.log(글내용,글제목,작성자);\n        // ** => false, \"dasdsa\" => true\n        if(!글내용  || !글제목  || !작성자  ){\n          alert(\"뭐든 하십쇼\");\n          return;\n        }\n\n      \n        //2) 가져온 데이터를 바탕으로 게시글 객체 생성하기\n        let 게시글 = {\n          //글번호는 게시글 배열에서 고유해야 함 , 게시글 배열에서 가장 큰 글번호값을 찾은 후 +1해서 반환해줄 예정\n          글번호: Math.max( ...게시글배열.map(function(게시글,인덱스){ return 게시글.글번호 })  ) +1, \n                //map함수를 이용해서 반복문을 돌리며 게시글의 글번호를 배열 형태로 반환 [1,2,3,4,5,6,7,8,9,10]\n          글제목 , // key,value값에 들어가는 변수명이 동일한 경우 속성명 단축구문을 제공\n          글내용 , \n          작성자 , \n          작성일 : new Date().toLocaleDateString() // 2024. 01. 15 \n        }\n\n        // 3) 생성한 게시글 객체를 게시글 배열에 추가한 후, 게시글 배열 변경함수 호출하기 (랜더링)\n        게시글배열.push(게시글);\n        // 게시글배열변경함수(게시글배열); // 이렇게하면 주소값을 넣는것이어서 안됨\n        게시글배열변경함수([...게시글배열]); // 전개되면 배열이 아니기 때문에 [] 를 넣어주는 것\n\n      // 입력값 초기화(state)초기화\n      글제목변경함수('');\n      글내용변경함수('');\n      작성자변경함수('');\n      \n     }\n\n\n\n\n\n\n  return (\n    <div className=\"App\">\n      { /* jsx문법 내부에서의 주석\n\n          JSX문법)\n          js문법 내부에 html코드를 작성할 수 있는 문법을 jsx문법이라고 함\n          리액트에서 ui를 구성할 때 보편적으로 사용되는 방법으로 복잡한 코드를 짤 필요 없이,\n          동적으로 추가되는 dom요소를 단순 코드선언으로 생성할 수 있게 도와줌\n      */ }\n\n      <div className=\"header\">\n        <h3 style={ {fontWeight : \"bolder\"} }>  {제목2}  </h3>\n      </div>\n\n      <div className='nav'>\n        {/* \n          react방식 event부여\n          onClick={함수}\n          * 주의점 : 무조건 함수 자료형 값만 넣어줘야함. 함수 호출한 결과값 넣으면 의미 없음\n        */}\n\n        {/* <button onClick={ () => console.log(1) }>제목변경테스트</button> */}\n        <button onClick={ 제목2변경 }>제목변경테스트</button>\n        <button>게시판</button>\n        <button>등록</button>\n      </div>\n\n      <div className='outer'>\n        <br/>\n        <h2>일반게시판</h2>\n\n        <table className='list-table'>\n          <thead>\n            { /* 번호, 제목, 작성자, 작성일, 삭제에 \n            각각 크기 10% , 40%, 20%, 20%, 10% 인라인으로 스타일 부여해주기*/ }\n            <tr>\n              <th style={ {width : \"10%\"}}>번호</th>\n              <th style={ {width : \"40%\"}}>제목</th>\n              <th style={ {width : \"20%\"}}>작성자</th>\n              <th style={ {width : \"20%\"}}>작성일</th>\n              <th style={ {width : 7 }}>삭제</th>\n            </tr>\n          </thead>\n          <tbody>\n            {\n              /*\n                Array내부의 map함수 사용 예정 \n                [1,2,3].forEach(함수) - forEach :  배열의 길이만큼 반복해줌 \n                [1,2,3].map(function() {return 1} )  => [1,1,1] - map : 배열의 길이만큼 반복하면서 return 되는 값을 배열에 담아서 반환해줌\n              */\n              \n              게시글배열.map(function(게시글, 인덱스) {\n                return (\n                  <tr key={인덱스}>\n                      <td>{게시글.글번호}</td>\n                      <td>{게시글.글제목}</td>\n                      <td>{게시글.작성자}</td>\n                      <td>{게시글.작성일}</td>\n                      <td> <button onClick={() => {게시글삭제(게시글.글번호)} }>삭제</button> </td>\n                      {/*\n                        게시글 삭제 기능\n                        1. 삭제하고자 하는 게시글을 특정할 수 있어야 함\n                        2. 게시글 배열에서 삭제하고자 하는 게시글을 없애준다.\n                        3. 내가 선택한 게시글이 제거된 게시글 배열로 화면이 랜더링 되어야 함\n                      */}\n                  </tr>\n                  )\n              })\n            }\n          </tbody>\n        </table>\n      </div>\n\n      \n\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}