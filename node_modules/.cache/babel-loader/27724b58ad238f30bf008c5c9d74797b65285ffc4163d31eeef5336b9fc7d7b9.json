{"ast":null,"code":"var _jsxFileName = \"C:\\\\ReactWorspace\\\\myapp\\\\src\\\\components\\\\BoardList.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BoardList(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outer\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uC77C\\uBC18\\uAC8C\\uC2DC\\uD310\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"list-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              width: \"10%\"\n            },\n            children: \"\\uBC88\\uD638\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              width: \"40%\"\n            },\n            children: \"\\uC81C\\uBAA9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              width: \"20%\"\n            },\n            children: \"\\uC791\\uC131\\uC790\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              width: \"20%\"\n            },\n            children: \"\\uC791\\uC131\\uC77C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              width: 7\n            },\n            children: \"\\uC0AD\\uC81C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children:\n        /*\r\n          Array내부의 map함수 사용 예정 \r\n          [1,2,3].forEach(함수) - forEach :  배열의 길이만큼 반복해줌 \r\n          [1,2,3].map(function() {return 1} )  => [1,1,1] - map : 배열의 길이만큼 반복하면서 return 되는 값을 배열에 담아서 반환해줌\r\n        */\n\n        게시글배열.map(function (게시글, 인덱스) {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: 게시글.글번호\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: 게시글.글제목\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: 게시글.작성자\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: 게시글.작성일\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  게시글삭제(게시글.글번호);\n                },\n                children: \"\\uC0AD\\uC81C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 28\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 23\n            }, this)]\n          }, 인덱스, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 19\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n}\n_c = BoardList;\nvar _c;\n$RefreshReg$(_c, \"BoardList\");","map":{"version":3,"names":["BoardList","props","_jsxDEV","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","게시글배열","map","게시글","인덱스","글번호","글제목","작성자","작성일","onClick","게시글삭제","_c","$RefreshReg$"],"sources":["C:/ReactWorspace/myapp/src/components/BoardList.js"],"sourcesContent":["export default function BoardList(props){\r\n\r\n\r\n    return(\r\n        <div className='outer'>\r\n        <br/>\r\n        <h2>일반게시판</h2>\r\n\r\n        <table className='list-table'>\r\n          <thead>\r\n            { /* 번호, 제목, 작성자, 작성일, 삭제에 \r\n            각각 크기 10% , 40%, 20%, 20%, 10% 인라인으로 스타일 부여해주기*/ }\r\n            <tr>\r\n              <th style={ {width : \"10%\"}}>번호</th>\r\n              <th style={ {width : \"40%\"}}>제목</th>\r\n              <th style={ {width : \"20%\"}}>작성자</th>\r\n              <th style={ {width : \"20%\"}}>작성일</th>\r\n              <th style={ {width : 7 }}>삭제</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {\r\n              /*\r\n                Array내부의 map함수 사용 예정 \r\n                [1,2,3].forEach(함수) - forEach :  배열의 길이만큼 반복해줌 \r\n                [1,2,3].map(function() {return 1} )  => [1,1,1] - map : 배열의 길이만큼 반복하면서 return 되는 값을 배열에 담아서 반환해줌\r\n              */\r\n              \r\n              게시글배열.map(function(게시글, 인덱스) {\r\n                return (\r\n                  <tr key={인덱스}>\r\n                      <td>{게시글.글번호}</td>\r\n                      <td>{게시글.글제목}</td>\r\n                      <td>{게시글.작성자}</td>\r\n                      <td>{게시글.작성일}</td>\r\n                      <td> <button onClick={() => {게시글삭제(게시글.글번호)} }>삭제</button> </td>\r\n                      {/*\r\n                        게시글 삭제 기능\r\n                        1. 삭제하고자 하는 게시글을 특정할 수 있어야 함\r\n                        2. 게시글 배열에서 삭제하고자 하는 게시글을 없애준다.\r\n                        3. 내가 선택한 게시글이 제거된 게시글 배열로 화면이 랜더링 되어야 함\r\n                      */}\r\n                  </tr>\r\n                  )\r\n              })\r\n            }\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    )\r\n\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}